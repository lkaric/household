generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Household {
  id    String  @id @default(cuid())
  name  String
  image String?

  users HouseholdUser[]

  createdAt DateTime @default(now())
  createdBy String?

  updatedAt DateTime @updatedAt
  updatedBy String?

  deletedAt DateTime?
  items     Item[]

  @@map("households")
}

enum HouseholdRole {
  HOUSEHOLD_OWNER
  HOUSEHOLD_MEMBER
}

model HouseholdUser {
  household   Household @relation(fields: [householdId], references: [id])
  householdId String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  role HouseholdRole @default(HOUSEHOLD_MEMBER)

  @@id([householdId, userId])
  @@map("households_users")
}

model User {
  id        String  @id @default(cuid())
  email     String  @unique
  password  String?
  firstName String
  lastName  String
  phone     String?

  emailVerified Boolean @default(false)
  phoneVerified Boolean @default(false)

  households    HouseholdUser[]
  createdItems  Item[]          @relation("createdBy")
  assignedItems Item[]          @relation("assignedTo")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("users")
}

enum ItemType {
  ITEM_CHORE
  ITEM_TO_BUY
}

model Item {
  id           String     @id @default(cuid())
  name         String
  description  String
  type         ItemType
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  createdById  String?
  assignedToId String?
  householdId  String?
  createdBy    User?      @relation("createdBy", fields: [createdById], references: [id])
  assignedTo   User?      @relation("assignedTo", fields: [assignedToId], references: [id])
  Household    Household? @relation(fields: [householdId], references: [id])

  @@map("items")
}
